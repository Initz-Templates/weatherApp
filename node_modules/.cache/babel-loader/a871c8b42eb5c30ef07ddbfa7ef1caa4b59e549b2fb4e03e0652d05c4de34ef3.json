{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UtkarshKatiyar\\\\VS Code Projects\\\\GitHub Projects\\\\Weather_App\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport MainWeatherWindow from './components/MainWeatherWindow';\nimport CityInput from './components/CityInput';\nimport WeatherBox from './components/WeatherBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: undefined,\n      // days contains objects with the following properties:\n      // date, weather_desc, icon, temp\n      days: new Array(5)\n    };\n    // creates the day objects and updates the state\n    this.updateState = data => {\n      const city = data.city.name;\n      const days = [];\n      const dayIndices = this.getDayIndices(data);\n      for (let i = 0; i < 5; i++) {\n        days.push({\n          date: data.list[dayIndices[i]].dt_txt,\n          weather_desc: data.list[dayIndices[i]].weather[0].description,\n          icon: data.list[dayIndices[i]].weather[0].icon,\n          temp: data.list[dayIndices[i]].main.temp\n        });\n      }\n      this.setState({\n        city: city,\n        days: days\n      });\n    };\n    // tries to make an API call with the given city name and triggers state update\n    this.makeApiCall = async city => {\n      const api_data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=6557810176c36fac5f0db536711a6c52`).then(resp => resp.json());\n      if (api_data.cod === '200') {\n        await this.updateState(api_data);\n        return true;\n      } else return false;\n    };\n    // returns array with Indices of the next five days in the list\n    // from the API data (every day at 12:00 pm)\n    this.getDayIndices = data => {\n      let dayIndices = [];\n      dayIndices.push(0);\n      let index = 0;\n      let tmp = data.list[index].dt_txt.slice(8, 10);\n      for (let i = 0; i < 4; i++) {\n        while (tmp === data.list[index].dt_txt.slice(8, 10) || data.list[index].dt_txt.slice(11, 13) !== '15') {\n          index++;\n        }\n        dayIndices.push(index);\n        tmp = data.list[index].dt_txt.slice(8, 10);\n      }\n      return dayIndices;\n    };\n  }\n  render() {\n    const WeatherBoxes = () => {\n      const weatherBoxes = this.state.days.slice(1).map(day => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(WeatherBox, {\n          ...day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"weather-box-list\",\n        children: weatherBoxes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(MainWeatherWindow, {\n          data: this.state.days[0],\n          city: this.state.city,\n          children: [/*#__PURE__*/_jsxDEV(CityInput, {\n            city: this.state.city,\n            makeApiCall: this.makeApiCall.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherBoxes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","MainWeatherWindow","CityInput","WeatherBox","jsxDEV","_jsxDEV","App","Component","constructor","args","state","city","undefined","days","Array","updateState","data","name","dayIndices","getDayIndices","i","push","date","list","dt_txt","weather_desc","weather","description","icon","temp","main","setState","makeApiCall","api_data","fetch","then","resp","json","cod","index","tmp","slice","render","WeatherBoxes","weatherBoxes","map","day","children","fileName","_jsxFileName","lineNumber","columnNumber","className","bind"],"sources":["C:/Users/UtkarshKatiyar/VS Code Projects/GitHub Projects/Weather_App/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport MainWeatherWindow from './components/MainWeatherWindow';\r\nimport CityInput from './components/CityInput';\r\nimport WeatherBox from './components/WeatherBox';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    city: undefined,\r\n\r\n    // days contains objects with the following properties:\r\n    // date, weather_desc, icon, temp\r\n    days: new Array(5)\r\n  };\r\n\r\n  // creates the day objects and updates the state\r\n  updateState = data => {\r\n    const city = data.city.name;\r\n    const days = [];\r\n    const dayIndices = this.getDayIndices(data);\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      days.push({\r\n        date: data.list[dayIndices[i]].dt_txt,\r\n        weather_desc: data.list[dayIndices[i]].weather[0].description,\r\n        icon: data.list[dayIndices[i]].weather[0].icon,\r\n        temp: data.list[dayIndices[i]].main.temp\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      city: city,\r\n      days: days\r\n    });\r\n  };\r\n\r\n  // tries to make an API call with the given city name and triggers state update\r\n  makeApiCall = async city => {\r\n    const api_data = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=6557810176c36fac5f0db536711a6c52`\r\n    ).then(resp => resp.json());\r\n\r\n    if (api_data.cod === '200') {\r\n      await this.updateState(api_data);\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  // returns array with Indices of the next five days in the list\r\n  // from the API data (every day at 12:00 pm)\r\n  getDayIndices = data => {\r\n    let dayIndices = [];\r\n    dayIndices.push(0);\r\n\r\n    let index = 0;\r\n    let tmp = data.list[index].dt_txt.slice(8, 10);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      while (\r\n        tmp === data.list[index].dt_txt.slice(8, 10) ||\r\n        data.list[index].dt_txt.slice(11, 13) !== '15'\r\n      ) {\r\n        index++;\r\n      }\r\n      dayIndices.push(index);\r\n      tmp = data.list[index].dt_txt.slice(8, 10);\r\n    }\r\n    return dayIndices;\r\n  };\r\n\r\n  render() {\r\n    const WeatherBoxes = () => {\r\n      const weatherBoxes = this.state.days.slice(1).map(day => (\r\n        <li>\r\n          <WeatherBox {...day} />\r\n        </li>\r\n      ));\r\n\r\n      return <ul className='weather-box-list'>{weatherBoxes}</ul>;\r\n    };\r\n\r\n    return (\r\n      <div className='App'>\r\n        <header className='App-header'>\r\n          <MainWeatherWindow data={this.state.days[0]} city={this.state.city}>\r\n            <CityInput city={this.state.city} makeApiCall={this.makeApiCall.bind(this)} />\r\n            <WeatherBoxes />\r\n          </MainWeatherWindow>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}